@model IEnumerable<PatientPortalApp.Models.Appointment>

@{
	ViewBag.Title = "Index";
}

<h3>Visit the @Html.RouteLink("Patient Module", new { action = "Index", Controller = "Patients" }) to add a new appointment</h3>
<br />
@(Html.Kendo().Grid(Model)
	.Name("grid")
	.DataSource(source =>
	{
		source.Server()
		.PageSize(20)
		.Model(m =>
		{
			m.Id(a => a.PatientId);
		})
		.Read(read => read.Action("Read_Appointment", "Appointments"))
		.Update(update => update.Action("Update_Appointments", "Appointments"));
	})
	.RowAction(row =>
	{
		row.HtmlAttributes.Add("onclick", "location.href = '/Appointments/Details/" + row.DataItem.PatientId + "'");
	})
	.Editable().Pageable().Sortable()
	.ToolBar(toolbar =>
	{
		toolbar.Pdf().HtmlAttributes(new { @class = "btn btn-primary", style = "color: white;" });
		toolbar.Search();
	})
	.Columns(columns =>
	{
		columns.Bound(a => a.PatientId).Title("Patient ID").HtmlAttributes(new { @class="customAttr"});
		columns.Bound(a => a.Patient.FullName).Title("Name");
		columns.Bound(a => a.Reason);
		columns.Bound(a => a.AppointmentDate).Title("Date").Format("{0:MMM d, yyyy}");
		columns.Bound(a => a.AppointmentDate).Title("Time").Format("{0:hh:mm tt}");
		columns.Bound(a => a.Provider.ProviderName);
		columns.Bound(a => a.HasBalance).Title("Outstanding Balance").Template(t =>
		{
			if (t.Patient.CurrentBalance > 0)
			{
				return "Patient Has Balance of $" + t.Patient.CurrentBalance;
			}
			else
			{
				return "N/A";
			}
		});
	})

)

<script>
	$(function () {
		//center text in all elements with .customAttr assigned
		$(".customAttr").css("text-align", "center");
		//Find element with balance and color the text in that row red
		$('td:contains("Patient Has Balance of $")').parent().css("color", "red");
	})
</script>