@{
    ViewBag.Title = "Patients";
}

@(Html.Kendo().Breadcrumb()
    .Name("breadcrumb")
    .BindToLocation(true)
    .Navigational(true)
    )

<hr />

@(Html.Kendo().Grid<PatientPortalApp.Models.Patient>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.PatientId);
            columns.Bound(p => p.FullName);
            columns.Bound(p => p.ActivePatient);
            columns.Command(command =>
            {
                command.Edit();
                command.Destroy();
            });

        })
        .ToolBar(tools => tools.Create())
        .Pageable().Sortable().Filterable()
        .DataSource(source => source.Ajax()
            .Model(model =>
            {
                model.Id(p => p.PatientId);
                model.Field(p => p.PatientId).Editable(false);
            })
            .Events(events => events.Error("error_handler"))
            .Read(read => read.Action("ReadPatient", "Patients"))
            .Update(update => update.Action("UpdatePatient", "Patients"))
            .Create(create => create.Action("CreatePatient", "Patients"))
            .Destroy(destroy => destroy.Action("DestroyPatient", "Patients"))
        )
        .ClientDetailTemplateId("client-template")
 )
@* TODO:
    1. Need to add a conditional statement for tabs that do not have any data to display
*@
<script id="client-template" type="text/x-kendo-template">
    @(Html.Kendo().TabStrip()
        .Name("tabstrip_#=PatientId#")
        .SelectedIndex(0)
        .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
        .Items(items =>
        {
        items.Add()
        .Text("Vitals")
        .Selected(true)
        .Content(@<text>
            @(Html.Kendo().Grid<PatientPortalApp.Models.Vital>()
            .Name("grid_#=PatientId#")
            .Columns(columns =>
            {
                columns.Bound(v => v.Weight);
                columns.Bound(v => v.Height);
                columns.Bound(v => v.Temperature);
                columns.Bound(v => v.BloodPressure);
                columns.Bound(v => v.Pulse);
            })
            .DataSource(source => source.Ajax()
                .Model(model =>
                {
                    model.Id(v => v.PatientId);
                    model.Field(v => v.PatientId).Editable(false);
                })
                .Events(events => events.Error("error_handler"))
                .Read(read => read.Action("Read_Vitals", "Vitals", new { id = "#=PatientId#" })))
            .ToClientTemplate())</text>);

        items.Add().Text("Referral").Content(@<text>
                @(Html.Kendo().Grid<PatientPortalApp.Models.Referral>()
                        .Name("grid1_#=PatientId#")
                        .Columns(columns =>
                        {
                            columns.Bound(r => r.ReferralDoctor );
                            columns.Bound(r => r.ReferralDate);
                            columns.Bound(r => r.Doctor);
                        })
                        .DataSource(source => source.Ajax()
                            .Model(model =>
                            {
                                model.Id(r => r.PatientId);
                                model.Field(r => r.PatientId).Editable(false);
                            })
                            .Events(events => events.Error("error_handler"))
                            .Read(read => read.Action("Read_Referrals", "Referrals", new { id = "#=PatientId#" })))
                        .ToClientTemplate()
                        )
            </text>);
        items.Add().Text("Treatment").Content(@<text>
    @(Html.Kendo().Grid<PatientPortalApp.Models.Treatment>()
                        .Name("grid2_#=PatientId#")
                        .Columns(columns =>
                        {
                            columns.Bound(t => t.TreatmentDate );
                            columns.Bound(t => t.TreatDescription);
                            columns.Bound(t => t.CreatedBy);
                        })
                        .DataSource(source => source.Ajax()
                            .Model(model =>
                            {
                                model.Id(r => r.PatientId);
                                model.Field(r => r.PatientId).Editable(false);
                            })
                            .Events(events => events.Error("error_handler"))
                            .Read(read => read.Action("Read_Treatment", "Treatments", new { id = "#=PatientId#" })))
                        .ToClientTemplate()
                        )</text>);
            })
            .ToClientTemplate()
    )
</script>

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>