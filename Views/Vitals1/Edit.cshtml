@model PatientPortalApp.Models.Vital

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Vital</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.VitalId)

	<div class="form-group">
		@Html.LabelFor(model => model.PatientId, "PatientId", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownList("PatientId", null, htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Patient.FullName, "FullName", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownList("FullName", null, htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Patient.FullName, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.VitalDate, "Date Recorded", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.VitalDate, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.VitalDate, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Temperature, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Temperature, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Temperature, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.BloodPressure, "Blood Pressure", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.BloodPressure, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.BloodPressure, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Pulse, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Pulse, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Pulse, "", new { @class = "text-danger" })
		</div>
	</div>

	<br />
	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-primary" />
		</div>
	</div>
</div>
}
<br />
<div>
    @Html.ActionLink("Back to List", "Index", new { id = "back-to-list" }, new { @class = "btn btn-primary" })
</div>
